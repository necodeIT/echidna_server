# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# Make sure not to wrap it in quotations. idk why but prisma is acting up when you do.
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres?schema=public

# The backend to use for authentication. Depending on the backend chosen
# you have to configure the environment variables accordingly (OIDC_*, SAML_*)
# 
# Possible values: `oidc`, `saml`
AUTH_BACKEND=oidc

# The name of the OIDC identity provider (e.g., 'Google', 'GitHub')
OIDC_NAME=YourIdentityProviderName

# The client ID assigned by the OIDC identity provider
OIDC_CLIENT_ID=YourClientIdHere

# The client secret assigned by the OIDC identity provider
OIDC_CLIENT_SECRET=YourClientSecretHere

# The URL to request OIDC tokens
OIDC_TOKEN_URL=https://example.com/OIDC/token

# The URL to retrieve user information
OIDC_USER_INFO_URL=https://example.com/OIDC/userinfo

# The URL for user authorization to grant access
OIDC_AUTHORIZATION_URL=https://example.com/OIDC/authorize

# The redirect URI for your application (must match the URI configured in the identity provider)
OIDC_REDIRECT_URI=https://yourapp.com/OIDC/callback

# Scopes requested for OIDC (comma-separated values, e.g., 'profile,email')
OIDC_SCOPES=profile,email

# Set to false when using in production
DEBUG=true
